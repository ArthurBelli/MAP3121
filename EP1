import matplotlib.pyplot as plt
import numpy as np

### decomposição LU

A = np.matrix('2,1,1;3,7,1;1,1,1')

L = np.zeros_like(A,dtype=np.double)

U = np.zeros_like(A,dtype=np.double)

N = np.size(A, 0)

for k in range(N):
    L[k, k] = 1
    U[k, k] = (A[k, k] - np.dot(L[k, :k], U[:k, k])) / L[k, k]
    for j in range(k+1, N):
        U[k, j] = (A[k, j] - np.dot(L[k, :k], U[:k, j])) / L[k, k]
    for i in range(k+1, N):
        L[i, k] = (A[i, k] - np.dot(L[i, :k], U[:k, k])) / U[k, k]

print(L)
print(U)

